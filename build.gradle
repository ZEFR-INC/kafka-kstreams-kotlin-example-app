//def mavenUser = findProperty "mavenUser"
//def mavenPassword = findProperty "mavenPassword"

buildscript {

    ext {
        kotlinVersion = '1.2.40'
        springBootVersion = '2.0.0.RELEASE'
        commonsAvroVersion = '1.1.34'
        kafkaVersion = '1.0.0'
        kafkaScalaVersion = '2.11'
        confluentVersion = '4.0.0'
        jerseyVersion = '2.25'
        jacksonVersion = '2.9.3'
        jettyVersion = '9.2.22.v20170606'//'9.2.24.v20180105'
    }
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        maven { url "http://packages.confluent.io/maven/" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlinVersion"
        classpath "org.jetbrains.kotlin:kotlin-noarg:$kotlinVersion"

    }
}


apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: "kotlin-noarg"
apply plugin: 'kotlin-allopen'


noArg {
    annotation("org.springframework.boot.context.properties.ConfigurationPro‌​perties")
}

jar {
    baseName = 'demo-kotlin-sink'
    version = '0.0.1-SNAPSHOT'
}

sourceCompatibility = 1.8

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
    maven { url "http://packages.confluent.io/maven/" }
    maven {
        credentials {
            username "$mavenUser"
            password "$mavenPassword"
        }
        url "https://zefr.jfrog.io/zefr/libs-release"
    }
    maven {
        credentials {
            username "$mavenUser"
            password "$mavenPassword"
        }
        url "https://zefr.jfrog.io/zefr/libs-snapshot"
    }

}




dependencies {
    compile "com.fasterxml.jackson.module:jackson-module-kotlin:$jacksonVersion"
    compile "com.fasterxml.jackson.core:jackson-core:$jacksonVersion"
    compile "com.fasterxml.jackson.core:jackson-annotations:$jacksonVersion"
    compile "org.springframework.boot:spring-boot-starter:$springBootVersion"
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
    compile "com.zefr.avro:commons-avro:$commonsAvroVersion"
//    compile "org.apache.avro:avro:1.8.2"
    compile "org.apache.kafka:kafka-clients:$kafkaVersion"
    compile "org.apache.kafka:kafka-streams:$kafkaVersion"
    compile "io.confluent:kafka-streams-avro-serde:$confluentVersion"
    compile "io.confluent:kafka-avro-serializer:$confluentVersion"
    compile "io.confluent:kafka-schema-registry-client:$confluentVersion"
    compile "log4j:log4j:1.2.16"

//    testCompile "org.scala-lang:scala-library:2.11.8"
    testCompile "com.101tec:zkclient:0.9"
    testCompile "org.apache.kafka:kafka_$kafkaScalaVersion:$kafkaVersion"
//    testCompile "org.eclipse.jetty:jetty-server:$jettyVersion"
//    testCompile "org.eclipse.jetty:jetty-http:$jettyVersion"
//    testCompile "org.eclipse.jetty:jetty-servlet:$jettyVersion"
//    testCompile "org.eclipse.jetty:jetty-jmx:$jettyVersion"
//    testCompile "org.eclipse.jetty:jetty-servlets:$jettyVersion"
//    testCompile "org.eclipse.jetty:jetty-jaas:$jettyVersion"
//    testCompile "org.eclipse.jetty:jetty-security:$jettyVersion"
//    testCompile "org.eclipse.jetty:jetty-annotations:$jettyVersion"
//    testCompile "org.eclipse.jetty:jetty-util:$jettyVersion"
//    testCompile "org.eclipse.jetty.websocket:javax-websocket-server-impl:$jettyVersion"
//    testCompile "org.eclipse.jetty.websocket:websocket-client:$jettyVersion"
    testCompile 'org.springframework.boot:spring-boot-starter-test'

//    testCompile "org.glassfish.jersey.containers:jersey-container-servlet:$jerseyVersion"
//    testCompile "org.glassfish.jersey.media:jersey-media-json-jackson:$jerseyVersion"
//    testCompile "org.glassfish.jersey.bundles.repackaged:jersey-guava:2.6"

    testCompile "org.apache.kafka:kafka-clients:$kafkaVersion"
    testCompile "io.confluent:kafka-schema-registry:$confluentVersion"
    testCompile 'org.apache.curator:curator-test:2.9.0'
    testCompile group: 'org.apache.kafka', name: "kafka_$kafkaScalaVersion", version: "$kafkaVersion", classifier: 'test'
    testCompile group: 'org.apache.kafka', name: "kafka-clients", version: "$kafkaVersion", classifier: 'test'
    testCompile group: "io.confluent", name:"kafka-schema-registry", version:"$confluentVersion", classifier: "tests"

    // This dependency is custom built to support the version of jetty and jersey that are used by spring bot
    testCompile group: 'io.confluent', name: 'rest-utils', version: '4.0.1-ZEFR-1'


}

configurations.all {
    exclude module: 'slf4j-log4j12'
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        if (details.requested.name == 'log4j') {
            details.useTarget "org.slf4j:log4j-over-slf4j:1.7.5"
        }
        if (details.requested.name == 'commons-logging') {
            details.useTarget "org.slf4j:jcl-over-slf4j:1.7.5"
        }
    }
}


sourceSets {
    main.java.srcDirs += 'src/main/kotlin'
}